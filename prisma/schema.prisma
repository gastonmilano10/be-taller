generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id      Int     @id @default(autoincrement())
  name    String
  surname String
  phone   String
  email   String?

  //Audit fields
  isActive   Boolean @default(true)
  createdOn  String  @default("")
  modifiedOn String  @default("")

  // Relations
  vehicles Vehicle[]
}

model Vehicle {
  id             Int    @id @default(autoincrement())
  number         String
  brand          String
  model          String
  year           Int
  engineCapacity Float

  //Audit fields
  isActive   Boolean @default(true)
  createdOn  String  @default("")
  modifiedOn String  @default("")

  //Relations
  clientId Int    @unique
  client   Client @relation(fields: [clientId], references: [id])

  kilometers   Kilometer[]
  services     Service[]
  nextServices NextService[]
}

model Kilometer {
  id        Int     @id @default(autoincrement())
  quantity  Float
  isService Boolean @default(false)

  //Audit fields
  isActive   Boolean @default(true)
  createdOn  String  @default("")
  modifiedOn String  @default("")

  //Relations
  vehicleId Int
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
}

model Service {
  id            Int     @id @default(autoincrement())
  reason        String
  cost          Float
  attentionDate String?
  observations  String?

  //Audit fields
  isActive   Boolean @default(true)
  createdOn  String  @default("")
  modifiedOn String  @default("")

  //Relations
  vehicleId Int     @unique
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])

  materials                   Material[]
  labors                      Labor[]
  states                      ServiceState[]
  RelationServiceStateService RelationServiceStateService[]
}

model Material {
  id          Int    @id @default(autoincrement())
  description String
  quantity    Float
  cost        Float

  //Audit fields
  isActive   Boolean @default(true)
  createdOn  String  @default("")
  modifiedOn String  @default("")

  //Relations
  serviceId Int     @unique
  service   Service @relation(fields: [serviceId], references: [id])
}

model Labor {
  id          Int    @id @default(autoincrement())
  description String
  quantity    Float
  cost        Float

  //Audit fields
  isActive   Boolean @default(true)
  createdOn  String  @default("")
  modifiedOn String  @default("")

  //Relations
  serviceId Int     @unique
  service   Service @relation(fields: [serviceId], references: [id])
}

model ServiceState {
  id          Int    @id @default(autoincrement())
  code        String
  description String

  //Audit fields
  isActive   Boolean @default(true)
  createdOn  String  @default("")
  modifiedOn String  @default("")

  //Relations
  services                    Service[]
  RelationServiceStateService RelationServiceStateService[]
}

model RelationServiceStateService {
  serviceId Int
  service   Service @relation(fields: [serviceId], references: [id])

  serviceStateId Int
  serviceState   ServiceState @relation(fields: [serviceStateId], references: [id])

  @@id([serviceId, serviceStateId])
}

model NextService {
  id           Int     @id @default(autoincrement())
  reason       String
  isUrgent     Boolean
  isRealized   Boolean
  observations String?

  //Audit fields
  isActive   Boolean @default(true)
  createdOn  String  @default("")
  modifiedOn String  @default("")

  //Relations
  vehicleId Int     @unique
  Vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
}
